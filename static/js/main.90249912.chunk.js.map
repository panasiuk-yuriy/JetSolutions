{"version":3,"sources":["store/actions.js","store/selectors.js","components/Tile/Tile.jsx","components/RestartGame/RestartGame.jsx","App.jsx","store/rootReducer.js","helpers/tiles.js","store/index.js","index.js"],"names":["ACTION_TYPES","getTiles","state","tiles","getSelectedTiles","selectedTile","getCounter","counter","Tile","tile","dispatch","useDispatch","selectedTiles","useSelector","handlerClick","filter","nowOpen","length","type","changePrevTile","changeTileStatus","setTimeout","isOpen","style","backgroundColor","color","className","role","onClick","RestartGame","App","Math","floor","every","map","key","id","initialState","store","createStore","action","sort","random","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90249912.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  CHANGE_TILE_STATUS: 'CHANGE_TILE_STATUS',\n  CHECK_TILES: 'CHECK_TILES',\n  CHANGE_PREV_TILE: 'CHANGE_PREV_TILE',\n  RESTART_GAME: 'RESTART_GAME',\n  CHANGE_COUNT: 'CHANGE_COUNT',\n};\n\nexport const changeTileStatus = (tile) => ({\n  type: ACTION_TYPES.CHANGE_TILE_STATUS, tile,\n});\n\nexport const checkTiles = () => ({\n  type: ACTION_TYPES.CHECK_TILES,\n});\n\nexport const changePrevTile = (tile) => ({ \n  type: ACTION_TYPES.CHANGE_PREV_TILE, tile \n});\n\nexport const restartGame = () => ({\n  type: ACTION_TYPES.RESTART_GAME,\n});\n","export const getTiles = (state) => state.tiles;\nexport const getSelectedTiles = (state) => state.selectedTile;\nexport const getCounter = (state) => state.counter;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeTileStatus, changePrevTile, checkTiles } from '../../store/actions';\nimport { getSelectedTiles, getTiles } from '../../store/selectors';\nimport PropTypes from 'prop-types';\nimport './Tile.scss';\n\nexport const Tile = ({ tile }) => {\n  const dispatch = useDispatch()\n  const selectedTiles = useSelector(getSelectedTiles);\n  const tiles = useSelector(getTiles)\n\n  const handlerClick = () => {\n    if (tiles.filter(tile => tile.nowOpen).length < 2) {\n      dispatch(changePrevTile(tile))\n      dispatch(changeTileStatus(tile))\n\n      if (selectedTiles.length === 1) {\n        setTimeout(() => {\n          dispatch(checkTiles())\n        }, 400)\n      }\n    }\n  };\n\n  return (\n    <>\n      {(tile.nowOpen || tile.isOpen) ? (\n        <div\n          style={{ backgroundColor: tile.color }}\n          className={tile.isOpen ? 'tile-open' : 'tile flip-vertical-left '} >\n        </div>) \n        : (\n            <div\n              className='tile'\n              role=\"presentation\"\n              onClick={() => handlerClick()}\n            >\n            </div>\n          )\n      }\n    </>\n  );\n}\n\nTile.propTypes = {\n  tile: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    nowOpen: PropTypes.bool.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    color: PropTypes.string.isRequired,\n  })\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {restartGame} from '../../store/actions';\nimport './RestartGame.scss';\n\nexport const RestartGame = () => {\n  const dispatch = useDispatch() \n  \n  const handlerClick = () => {\n    dispatch(restartGame())\n  }\n\n  return (\n    <button\n      className=\"restart_btn\"\n      onClick={() => handlerClick()}\n    >\n      Restart game\n    </button>\n  );\n}\n\n","import React from 'react';\nimport './App.scss';\nimport { Tile } from './components/Tile/Tile';\nimport { getTiles, getCounter } from './store/selectors';\nimport { useSelector } from 'react-redux';\nimport { RestartGame } from './components/RestartGame/RestartGame';\n\nfunction App() {\n  const tiles = useSelector(getTiles);\n  const counter = useSelector(getCounter)\n\n  return (\n    <main className=\"tiles\">\n      <div className=\"tiles__score\">\n        <p className=\"tiles__score--title\">Number of attempts:</p>\n        <h3 className=\"tiles__couter\">{Math.floor(counter)}</h3>\n      </div>\n      {tiles.every((tile) => tile.isOpen)\n        ? <RestartGame />\n        : (\n          <div className=\"tiles__container\">\n            {tiles.map((tile) => (\n              <Tile key={tile.id} tile={tile} />\n            ))}\n          </div>\n          )\n      }\n    </main>\n  );\n}\n\nexport default App;\n","import { ACTION_TYPES } from './actions';\nimport { tiles } from '../helpers/tiles';\n\nconst initialState = {\n  tiles,\n  selectedTile: [],\n  counter: 0,\n};\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPES.CHANGE_TILE_STATUS:\n      return {\n        ...state,\n        counter: state.counter + 1 / 2,\n        tiles: state.tiles.map(tile => {\n          if (tile.id === action.tile.id) {\n            return { ...tile, nowOpen: true }\n          }\n          return tile\n        })\n      };\n    case ACTION_TYPES.CHANGE_PREV_TILE:\n      if (state.selectedTile.length > 1) {\n        return {\n          ...state,\n          selectedTile: [action.tile]\n        }\n      }\n      return { ...state, selectedTile: [...state.selectedTile, action.tile] }\n\n    case ACTION_TYPES.CHECK_TILES:\n      if (state.selectedTile[0] && state.selectedTile[1]\n        && (state.selectedTile[0].color === state.selectedTile[1].color)) {\n        return {\n          ...state,\n          tiles: state.tiles.map(tile => {\n            if (tile.color === state.selectedTile[1].color) {\n              return { ...tile, isOpen: true, nowOpen: false }\n            }\n            return tile\n          })\n        }\n      }\n      if (state.selectedTile[0] && state.selectedTile[1]\n        && (state.selectedTile[0].color !== state.selectedTile[1].color)) {\n        return {\n          ...state,\n          tiles: state.tiles.map(tile => {\n            return { ...tile, nowOpen: false }\n          })\n        }\n      }\n      break;\n\n    case ACTION_TYPES.RESTART_GAME:\n      return {\n        ...state,\n        counter: 0,\n        tiles: state.tiles\n          .sort(() => Math.random() - 0.5)\n          .map(tile => {\n            return { ...tile, isOpen: false, nowOpen: false }\n          })\n      };\n\n    default:\n      return state;\n  }\n}\n","export const tiles = [\n  {\n    id: 1,\n    color: 'green',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 2,\n    color: 'hotpink',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 3,\n    color: 'red',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 4,\n    color: 'brown',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 5,\n    color: 'green',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 6,\n    color: 'blue',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 7,\n    color: 'yellow',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 8,\n    color: 'brown',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 9,\n    color: 'orange',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 10,\n    color: 'blue',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 11,\n    color: 'rebeccapurple',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 12,\n    color: 'hotpink',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 13,\n    color: 'rebeccapurple',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 14,\n    color: 'yellow',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 15,\n    color: 'orange',\n    isOpen: false,\n    nowOpen: false,\n  },\n  {\n    id: 16,\n    color: 'red',\n    isOpen: false,\n    nowOpen: false,\n  },\n]","import {createStore} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n  \n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}